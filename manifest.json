{
  "dxt_version": "0.1",
  "name": "adaptive-graph-of-thoughts",
  "version": "1.0.2",
  "display_name": "Adaptive Graph of Thoughts",
  "description": "Advanced scientific reasoning framework using Graph-of-Thoughts methodology for complex research analysis",
  "long_description": "The Adaptive Graph of Thoughts (ASR-GoT) framework provides sophisticated scientific reasoning capabilities through graph-based analysis. Features include hypothesis generation and evaluation, evidence gathering from academic databases, relationship mapping between scientific concepts, and claim validation with confidence scoring. Supports integration with Neo4j for graph operations and various AI services for enhanced reasoning.",
  "author": {
    "name": "SaptaDey",
    "email": "sapta@example.com",
    "url": "https://github.com/SaptaDey"
  },
  "license": "MIT",
  "keywords": [
    "scientific-reasoning",
    "graph-of-thoughts",
    "neo4j",
    "research",
    "ai",
    "mcp",
    "evidence-gathering",
    "hypothesis-testing"
  ],
  "server": {
    "type": "node",
    "entry_point": "server/index.js",
    "mcp_config": {
      "command": "node",
      "args": [
        "${__dirname}/server/index.js"
      ],
      "env": {}
    }
  },
  "tools": [
    {
      "name": "scientific_reasoning_query",
      "description": "Advanced scientific reasoning with graph analysis using the ASR-GoT framework",
      "text": "Use this tool to analyze complex scientific questions through graph-based reasoning, providing comprehensive analysis with confidence scoring and evidence integration."
    },
    {
      "name": "analyze_research_hypothesis",
      "description": "Hypothesis evaluation with confidence scoring and evidence integration",
      "text": "Evaluate research hypotheses using advanced scoring algorithms and multi-source evidence gathering from academic databases."
    },
    {
      "name": "explore_scientific_relationships",
      "description": "Concept relationship mapping through graph-based analysis",
      "text": "Map and analyze relationships between scientific concepts using graph traversal algorithms and semantic analysis."
    },
    {
      "name": "validate_scientific_claims",
      "description": "Evidence-based claim validation with external database integration",
      "text": "Validate scientific claims against peer-reviewed literature from PubMed, Google Scholar, and other academic sources."
    }
  ],
  "prompts": [
    {
      "name": "analyze_research_question",
      "description": "Generate comprehensive analysis of a scientific research question",
      "text": "Analyze the following research question using the Adaptive Graph of Thoughts framework, providing problem decomposition, hypothesis generation, evidence requirements, and confidence assessment."
    },
    {
      "name": "hypothesis_generator",
      "description": "Generate and evaluate multiple hypotheses for a given scientific problem",
      "text": "Generate multiple testable hypotheses for the given scientific problem, including testability assessment, evidence requirements, and confidence scoring."
    },
    {
      "name": "literature_synthesis",
      "description": "Synthesize findings from multiple research papers into coherent insights",
      "text": "Synthesize findings from multiple research papers into coherent insights, identifying common themes, contradictions, knowledge gaps, and practical implications."
    }
  ],
  "compatibility": {
    "minimum_host_version": "1.0.0",
    "supported_platforms": ["win32", "darwin", "linux"]
  },
  "user_config": {
    "neo4j_uri": {
      "type": "string",
      "title": "Neo4j Database URI",
      "description": "URI for the Neo4j graph database connection (required for graph operations)",
      "default": "bolt://localhost:7687",
      "required": true
    },
    "neo4j_username": {
      "type": "string", 
      "title": "Neo4j Username",
      "description": "Username for Neo4j database authentication",
      "default": "neo4j",
      "required": true
    },
    "neo4j_password": {
      "type": "string",
      "title": "Neo4j Password",
      "description": "Password for Neo4j database authentication (optional, required only for advanced graph operations)",
      "required": false,
      "sensitive": true
    },
    "openai_api_key": {
      "type": "string",
      "title": "OpenAI API Key",
      "description": "API key for OpenAI services (optional, enhances reasoning capabilities)",
      "required": false,
      "sensitive": true
    },
    "anthropic_api_key": {
      "type": "string",
      "title": "Anthropic API Key", 
      "description": "API key for Anthropic Claude services (optional, enhances reasoning capabilities)",
      "required": false,
      "sensitive": true
    },
    "pubmed_api_key": {
      "type": "string",
      "title": "PubMed API Key",
      "description": "API key for PubMed database access (optional, for academic research)",
      "required": false,
      "sensitive": true
    },
    "log_level": {
      "type": "string",
      "title": "Log Level",
      "description": "Logging verbosity level",
      "default": "INFO",
      "required": false,
      "enum": ["ERROR", "WARN", "INFO", "DEBUG"]
    }
  },
  "privacy": {
    "data_collection": "none",
    "external_services": ["Neo4j Database", "Optional: OpenAI API", "Optional: Anthropic API", "Optional: PubMed API"],
    "data_retention": "local_only",
    "encryption": "in_transit"
  },
  "security": {
    "permissions": ["filesystem_read", "network_access"],
    "sandbox": false,
    "code_signing": false
  }
}
